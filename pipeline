pipeline {
    agent any
    environment {
        REGION_GCP = "us-central1"
        ZONE_GCP = "us-central1-a"
        IMAGE_NAME = "docker-cloud"
        PROJECT_ID = "mythic-inn-420620"
        IMAGE_TAG = "latest"
        DOCKER_HUB = "ganesh6498/docker-cloud"
        ARTIFACT_REPO = "$REGION_GCP-docker.pkg.dev/$PROJECT_ID/my-docker-repo/${IMAGE_NAME}"
    }

    stages {
        stage("Git Clone") {
            steps {
                git branch: 'main', url: 'https://github.com/ganesh-redy/docker-pipe-cloud-run.git'
            }
        }

        stage("Build Docker Image") {
            steps {
                sh 'docker build -t ${IMAGE_NAME}:${BUILD_NUMBER}.'
            }
        }

        stage("Authenticate with Docker Hub") {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: "docker-hub-credential",
                    usernameVariable: "DOCKER_USER",
                    passwordVariable: "DOCKER_PASS"
                )]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                }
            }
        }

        stage("Push Docker Image to Docker Hub") {
            steps {
                sh '''
                docker tag ${IMAGE_NAME}:${BUILD_NUMBER} ${DOCKER_HUB}:${BUILD_NUMBER}
                docker push ${DOCKER_HUB}:${BUILD_NUMBER}
                '''
            }
        }

        stage("Run Terraform & Push Docker Image in Parallel") {
            parallel (
                stage ("Create Artifact Registry with Terraform") {
                    steps {
                        sh '''
                          terraform init
                          terraform plan
                          terraform apply --auto-approve
                        '''
                    }
                },

                stage("Wait for Artifact Registry & Push Docker Image") {
                    steps {
                        script {
                            retry(3) {  // ‚úÖ Retry to ensure Artifact Registry is created before pushing the image
                                sh '''
                                echo "Waiting for Artifact Registry to be available..."
                                sleep 20  # ‚úÖ Adjust the wait time if needed
                                docker tag ${IMAGE_NAME}:${BUILD_NUMBER} $ARTIFACT_REPO:${BUILD_NUMBER}
                                docker push $ARTIFACT_REPO:${BUILD_NUMBER}
                                '''
                            }

                            
                        }
                    }
                }
            )
        }

        stage("Deploy to Cloud Run using Terraform") {
            steps {
                script {
                    sh '''
                    terraform apply -auto-approve
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully! üöÄ"
        }
        failure {
            echo "Pipeline failed! ‚ùå"
        }
    }
}

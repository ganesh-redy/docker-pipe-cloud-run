pipeline {
    agent any

    environment {
        REGION_GCP = "us-central1"
        PROJECT_ID = "mythic-inn-420620"
        IMAGE_NAME = "docker-cloud"
        IMAGE_TAG = "latest"
        ARTIFACT_REPO = "${REGION_GCP}-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/${IMAGE_NAME}"
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-key')
    }

    stages {
        stage("Git Clone") {
            steps {
                git branch: 'main', url: 'https://github.com/ganesh-redy/docker-pipe-cloud-run.git'
            }
        }

        stage("Build Docker Image") {
            steps {
                sh 'docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .'
            }
        }

        stage("Authenticate with Google Cloud") {
            steps {
                sh '''
                gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                gcloud auth configure-docker ${REGION_GCP}-docker.pkg.dev
                '''
            }
        }
        
stage("Run Terraform & Push Docker Image in Parallel") {
            parallel {
                stage("Create Artifact Registry with Terraform") {
                    steps {
                        script {
                            sh '''
                            terraform init
                            terraform plan
                            terraform apply --auto-approve
                            '''
                        }
                    }
                }
                
                stage("Wait & Push Docker Image to Artifact Registry") {
                    steps {
                        script {
                            retry(3) {  
                                sh '''
            

                                echo "Waiting for Artifact Registry to be available..."
                                sleep 30
                                docker tag ${IMAGE_NAME}:${BUILD_NUMBER} $ARTIFACT_REPO:${BUILD_NUMBER}
                                docker push $ARTIFACT_REPO:${BUILD_NUMBER}
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
        
    

    post {
        success {
            echo "Pipeline completed successfully! üöÄ"
        }
        failure {
            echo "Pipeline failed! ‚ùå"
        }
    }
}


